import Head from "next/head";
import { Geist, Geist_Mono, Permanent_Marker } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useState, useEffect } from 'react';
import { Box, Heading, Text, VStack, HStack, Link, Button, Divider, Image, useColorModeValue, Flex, IconButton, Drawer, DrawerBody, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton, useDisclosure } from '@chakra-ui/react';
import { HamburgerIcon } from '@chakra-ui/icons';
import { FaGithub, FaLinkedin } from 'react-icons/fa';
import ParticleBackground from '../components/ParticleBackground';
import ThreeRowCarousel from '../components/ThreeRowCarousel';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const permanentMarker = Permanent_Marker({
  variable: "--font-permanent-marker",
  subsets: ["latin"],
  weight: "400",
});

const sections = [
  { id: "home", label: "Home" },
  { id: "about", label: "About" },
  { id: "skills", label: "Skills" },
  { id: "projects", label: "Projects" },
  { id: "contact", label: "Contact" },
];

function scrollToSection(id) {
  if (typeof window !== "undefined") {
    const el = document.getElementById(id);
    if (el) el.scrollIntoView({ behavior: "smooth" });
  }
}

export default function Home() {
  const { isOpen, onOpen, onClose } = useDisclosure();
  const [currentTitleIndex, setCurrentTitleIndex] = useState(0);
  const [currentText, setCurrentText] = useState("");
  const [isTyping, setIsTyping] = useState(true);
  
  const titles = [
    "Web Developer",
    "Mobile Developer", 
    "UI/UX Enthusiast"
  ];

  useEffect(() => {
    let timeout;
    
    if (isTyping) {
      const currentTitle = titles[currentTitleIndex];
      if (currentText.length < currentTitle.length) {
        timeout = setTimeout(() => {
          setCurrentText(currentTitle.slice(0, currentText.length + 1));
        }, 100); // Type speed
      } else {
        timeout = setTimeout(() => {
          setIsTyping(false);
        }, 1500); // Pause before erasing
      }
    } else {
      if (currentText.length > 0) {
        timeout = setTimeout(() => {
          setCurrentText(currentText.slice(0, -1));
        }, 50); // Erase speed
      } else {
        setCurrentTitleIndex((prev) => (prev + 1) % titles.length);
        setIsTyping(true);
      }
    }

    return () => clearTimeout(timeout);
  }, [currentText, isTyping, currentTitleIndex, titles]);
  
  // Updated dark theme colors
  const navBg = useColorModeValue("white", "#121212");
  const navBorderColor = useColorModeValue("gray.200", "#3d3d3d");
  const buttonColor = useColorModeValue("gray.800", "white");
  const buttonHoverBg = useColorModeValue("gray.100", "#3d3d3d");
  const homeBg = useColorModeValue("gray.50", "#121212");
  const headingColor = useColorModeValue("gray.800", "white");
  const textColor = useColorModeValue("gray.600", "white");
  const sectionBg1 = useColorModeValue("white", "#121212");
  const sectionBg2 = useColorModeValue("gray.50", "#3d3d3d");
  const dividerColor = useColorModeValue("gray.200", "#3d3d3d");

  return (
    <>
      <Head>
        <title>Kyle Fernandez</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      {/* Desktop Navigation */}
      <Flex 
        as="nav" 
        position="fixed" 
        top={0} 
        w="100%" 
        bg={navBg} 
        zIndex={10} 
        boxShadow="sm" 
        py={2}
        borderBottom="1px solid"
        borderColor={navBorderColor}
        justify="center"
        align="center"
        display={{ base: "none", lg: "flex" }}
      >
        <HStack justify="space-between" align="center" maxW="container.xl" w="100%" px={6}>
          <HStack>
            <Image 
              src="/assets/MyLogo.png" 
              alt="Logo" 
              height="50px" 
              width="auto" 
              objectFit="contain" 
            />
          </HStack>
          <HStack spacing={6}>
            {sections.map((section) => (
              <Button
                key={section.id}
                variant="ghost"
                onClick={() => scrollToSection(section.id)}
                color={buttonColor}
                _hover={{
                  bg: buttonHoverBg
                }}
              >
                {section.label}
              </Button>
            ))}
          </HStack>
        </HStack>
      </Flex>

      {/* Mobile Navigation */}
      <Flex 
        as="nav" 
        position="fixed" 
        top={0} 
        w="100%" 
        bg={navBg} 
        zIndex={10} 
        boxShadow="sm" 
        py={2}
        borderBottom="1px solid"
        borderColor={navBorderColor}
        justify="space-between"
        align="center"
        px={4}
        display={{ base: "flex", lg: "none" }}
      >
        <Image 
          src="/assets/MyLogo.png" 
          alt="Logo" 
          height="40px" 
          width="auto" 
          objectFit="contain" 
        />
        <IconButton
          aria-label="Open menu"
          icon={<HamburgerIcon />}
          variant="ghost"
          onClick={onOpen}
          color={buttonColor}
        />
      </Flex>

      {/* Mobile Drawer */}
      <Drawer isOpen={isOpen} placement="right" onClose={onClose}>
        <DrawerOverlay />
        <DrawerContent bg={navBg}>
          <DrawerCloseButton color={buttonColor} />
          <DrawerHeader color={headingColor}>Menu</DrawerHeader>
          <DrawerBody>
            <VStack spacing={4} align="stretch">
              {sections.map((section) => (
                <Button
                  key={section.id}
                  variant="ghost"
                  onClick={() => {
                    scrollToSection(section.id);
                    onClose();
                  }}
                  color={buttonColor}
                  _hover={{
                    bg: buttonHoverBg
                  }}
                  justifyContent="flex-start"
                  size="lg"
                >
                  {section.label}
                </Button>
              ))}
            </VStack>
          </DrawerBody>
        </DrawerContent>
      </Drawer>

      {/* Remove the pt={20} and adjust the home section */}
      <Box>
        {/* Home Section */}
        <Flex 
          id="home" 
          minH="100vh" 
          bg={homeBg}
          align="center"
          justify="center"
          px={{ base: 2, md: 6 }}
          pt={{ base: 16, md: 20 }} // Add top padding to account for fixed nav
          position="relative"
        >
          {/* Particle Background */}
          <Box
            position="fixed"
            top={0}
            left={0}
            w="100vw"
            h="100vh"
            zIndex={0}
          >
            <ParticleBackground />
          </Box>
          <Flex 
            maxW="container.xl" 
            w="100%" 
            direction={{ base: "column-reverse", md: "column-reverse", lg: "row" }}
            align="center"
            justify="space-between"
            gap={{ base: 8, md: 12 }}
            position="relative"
            zIndex={3}
          >
            {/* Left Column - Introduction */}
            <Flex 
              direction="column" 
              flex={1}
              maxW={{ base: "100%", lg: "600px" }}
              mb={{ base: 8, md: 8, lg: 0 }}
            >
              <VStack align="start" spacing={4}>
                <Text 
                  color={textColor} 
                  fontSize={{ base: "md", md: "lg" }}
                  fontWeight="medium"
                  textTransform="uppercase"
                  letterSpacing="wide"
                >
                  Hello, I&apos;m
                </Text>
                
                <Heading 
                  size="5xl" 
                  color={headingColor}
                  lineHeight="1.1"
                  fontWeight="bold"
                  fontSize={{ base: "5xl", md: "6xl", lg: "7xl" }}
                  fontFamily={permanentMarker.style.fontFamily}
                >
                  Kyle Fernandez
                </Heading>
                
                <Heading 
                  size="xl" 
                  color="white"
                  fontWeight="semibold"
                  fontSize={{ base: "xl", md: "2xl", lg: "4xl" }}
                >
                  I&apos;m an{" "}
                  <Text
                    as="span"
                    color="#458bd9"
                    borderRight="2px solid"
                    borderColor="#458bd9"
                    animation={isTyping ? "blink 1s infinite" : "none"}
                    sx={{
                      "@keyframes blink": {
                        "0%, 50%": { borderColor: "#458bd9" },
                        "51%, 100%": { borderColor: "transparent" }
                      }
                    }}
                  >
                    {currentText}
                  </Text>
                </Heading>
                
                <Text 
                  fontSize={{ base: "md", md: "lg" }}
                  color={textColor}
                  lineHeight="1.7"
                  maxW="500px"
                >
                  I build exceptional digital experiences that combine beautiful design with powerful functionality. 
                  Passionate about creating web applications that make a difference.
                </Text>
                <HStack spacing={4} pt={4} flexWrap="wrap">
                  {/* GitHub */}
                  <Button
                    as={Link}
                    href="https://github.com/SSimbah" // replace with your GitHub URL
                    target="_blank"
                    size="md"
                    variant="ghost"
                    leftIcon={<FaGithub size="20px" />}
                    color={buttonColor}
                    _hover={{ bg: buttonHoverBg }}
                    px={4}
                  >
                    GitHub
                  </Button>

                  {/* LinkedIn */}
                  <Button
                    as={Link}
                    href="https://linkedin.com/in/fernandez-kyle-owie-693802248/" // replace with your LinkedIn URL
                    target="_blank"
                    size="md"
                    variant="ghost"
                    leftIcon={<FaLinkedin size="20px" />}
                    color={buttonColor}
                    _hover={{ bg: buttonHoverBg }}
                    px={4}
                  >
                    LinkedIn
                  </Button>

                  {/* Download CV */}
                  <Button
                    as={Link}
                    href="/assets/Resume-KyleOwieFernandez.pdf" // update to actual file path
                    download
                    size="md"
                    variant="outline"
                    borderColor={buttonHoverBg}
                    color={buttonColor}
                    _hover={{ bg: buttonHoverBg, color: "white" }}
                    px={6}
                  >
                    Download CV
                  </Button>
                </HStack>
              </VStack>
            </Flex>
            
            {/* Right Column - Visual Element */}
            <Flex 
              flex={1}
              justify="center"
              align="center"
              maxW={{ base: "100%", lg: "500px" }}
            >
              <Box
                position="relative"
                w={{ base: "220px", sm: "350px", md: "500px", lg: "600px" }}
                h={{ base: "220px", sm: "350px", md: "500px", lg: "600px" }}
                display="flex"
                align="center"
                justify="center"
              >
                <Image 
                  src="/assets/MyPicture.png" 
                  alt="Kyle Fernandez" 
                  objectFit="contain"
                  w="100%"
                  h="100%"
                />
              </Box>
            </Flex>
          </Flex>
        </Flex>
        <Divider borderColor={dividerColor} />
        {/* About Section */}
        <Box 
          id="about" 
          minH="60vh" 
          py={20} 
          bg={sectionBg1}
          boxShadow="lg"
        >
          <VStack spacing={4}>
            <Heading color={headingColor}>About Me</Heading>
          </VStack>
          <Flex
            justify="center"
            align="center"
            minH="100vh"
            px={{ base: 4, md: 8 }}
            mt={4}
          >
            <Box
              py={16}
              px={{ base: 6, md: 12 }}
              bg={sectionBg2}
              borderRadius="xl"
              boxShadow="xl"
              width={{base: "100%", md: "90%", lg: "66%"}}  
              maxW="1200px"
                    zIndex={3}
              // w="100%"
              // justify="center"
              // align="center"
            >
              <Flex
                direction={{ base: "column", lg: "row" }}
                gap={{ base: 8, lg: 12 }}
              >
                {/* Left Column - Avatar Card */}
                <Flex
                  direction="column"
                  flex={1}
                  maxW={{ base: "100%", lg: "400px" }}
                  align={{ base: "center", lg: "start" }}
                  // textAlign={{ base: "center", lg: "left" }}
                >
                  {/* Avatar and Heading Row */}
                  <Flex
                    direction={{ base: "row", md: "row" }}
                    align={{ base: "center", md: "start" }}
                    justifyContent={{ base: "center", md: "flex-start" }}
                    gap={6}
                    mb={6}
                    w="100%"
                    bg={sectionBg1}
                    borderRadius="xl"
                    p={{ base: 3, md: 4 }}
                  >
                    {/* Avatar */}
                    <Box
                      w="120px"
                      h="120px"
                      borderRadius="full"
                      overflow="hidden"
                      boxShadow="2xl"
                      border="2px solid"
                      borderColor={buttonHoverBg}
                      flexShrink={0}
                    >
                      <Image
                        src="/assets/Avatar.jpg"
                        alt="Kyle Fernandez"
                        w="100%"
                        h="100%"
                        objectFit="cover"
                      />
                    </Box>

                    {/* Heading Content */}
                    <Flex
                      direction="column"
                      align={{ base: "start", md: "start" }}
                      textAlign={{ base: "left", md: "left" }}
                    >
                      {/* Tagline */}
                      <Heading
                        color="#458bd9"
                        fontSize="lg"
                        fontWeight="bold"
                        textTransform="uppercase"
                        letterSpacing="wide"
                        mb={2}
                      >
                        Building Future-Ready Tech, One Line at a Time.
                      </Heading>

                      {/* Titles */}
                      <Text
                        size="sm"
                        fontWeight="semibold"
                      >
                        Web Developer | Mobile Developer | UI/UX Enthusiast
                      </Text>
                    </Flex>
                  </Flex>

                  {/* About Me Paragraph */}
                  <Text
                    fontSize={{ base: "md", md: "lg" }}
                    color={textColor}
                    lineHeight="1.7"
                  >
                    Hi! I&apos;m <Text as="span" fontWeight="bold">Kyle Owie Fernandez</Text>, a passionate and results-driven Computer Science graduate from Iloilo Science and Technology University. 
                    With a strong foundation in software development, web technologies, and problem-solving, I specialize in building efficient, 
                    user-focused digital solutions. I&apos;m dedicated to continuous learning and always eager to take on new challenges that push my technical 
                    and creative boundaries. Whether it&apos;s developing responsive websites, streamlining backend processes, or contributing to innovative 
                    tech projects, I bring reliability, attention to detail, and a commitment to delivering high-quality work. If you&apos;re looking for someone 
                    who values professionalism, innovation, and client satisfaction—I&apos;m ready to help bring your ideas to life. 
                    <br/>
                    I perform well both independently and in collaborative settings, adapting easily to different workflows and project needs. 
                    My flexibility allows me to take initiative when working solo while also contributing meaningfully in team-driven environments. 
                    At the core of my work is a passion for building purposeful technology that solves real problems and creates value.

                  </Text>
                </Flex>

                {/* Right Column - Three Row Carousel */}
                <Flex
                  flex={1}
                  justify="center"
                  align="center"
                  direction={{ base: "row", lg: "column" }}
                  maxW={{ base: "100%", lg: "800px" }}
                  gap={2}
                >
                  <Box
                    position="relative"
                    w="100%"
                    overflow="hidden"
                    borderRadius="xl"
                    boxShadow="xl"
                  >
                    <ThreeRowCarousel 
                      images={[
                        "/assets/Image1.jpeg",
                        "/assets/Image2.jpg",
                        "/assets/Image3.jpeg",
                        "/assets/Image4.jpg",
                        "/assets/Image5.jpg",
                        "/assets/Image6.jpg",
                        "/assets/Image7.jpeg",
                        "/assets/Image8.jpg",
                        "/assets/Image9.jpg",
                        "/assets/Image10.jpeg",
                        "/assets/Image11.jpeg",
                      ]}
                      autoPlay={true}
                      interval={6000}
                    />
                  </Box>
                </Flex>
              </Flex>
            </Box>
          </Flex>
        </Box>
        <Divider borderColor={dividerColor} />
        {/* Skills Section */}
        <Box 
          id="skills" 
          minH="60vh" 
          py={20} 
          bg={sectionBg2}
        >
          <VStack spacing={4}>
            <Heading color={headingColor}>Skills</Heading>
            <Text color={textColor}>
              JavaScript, React, Next.js, Chakra UI, Node.js, ...
            </Text>
          </VStack>
        </Box>
        <Divider borderColor={dividerColor} />
        {/* Projects Section */}
        <Box 
          id="projects" 
          minH="60vh" 
          py={20} 
          bg={sectionBg1}
        >
          <VStack spacing={4}>
            <Heading color={headingColor}>Projects</Heading>
            <Text color={textColor}>
              Project 1, Project 2, Project 3, ...
            </Text>
          </VStack>
        </Box>
        <Divider borderColor={dividerColor} />
        {/* Contact Section */}
        <Box 
          id="contact" 
          minH="60vh" 
          py={20} 
          bg={sectionBg2}
        >
          <VStack spacing={4}>
            <Heading color={headingColor}>Contact</Heading>
            <Text color={textColor}>
              Email: your.email@example.com
            </Text>
          </VStack>
        </Box>
      </Box>
    </>
  );
}
